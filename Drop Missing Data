In the world of pandas, the inplace parameter plays a crucial role when performing operations on dataframes. Let’s break it down:

inplace=True:
When you set inplace=True, the operation modifies the data in place. This means that the original dataframe is directly altered, and the operation returns nothing.
Example: If you have a dataframe df and you apply an operation with inplace=True, it will look like this:
Python

df.an_operation(inplace=True)
AI-generated code. Review and use carefully. More info on FAQ.
The data in df will be updated, but the method won’t return anything.
inplace=False (Default):
When you use inplace=False (which is the default), the operation is performed, but it returns a copy of the object.
Example: If you apply an operation with inplace=False, you’ll reassign the modified dataframe to a new variable:
Python

df = df.an_operation(inplace=False)
AI-generated code. Review and use carefully. More info on FAQ.
In this case, df remains unchanged, and the modified dataframe is stored in the new variable.


DataFrame students
+-------------+--------+
| Column Name | Type   |
+-------------+--------+
| student_id  | int    |
| name        | object |
| age         | int    |
+-------------+--------+
There are some rows having missing values in the name column.

Write a solution to remove the rows with missing values.

The result format is in the following example.

 

Example 1:

Input:
+------------+---------+-----+
| student_id | name    | age |
+------------+---------+-----+
| 32         | Piper   | 5   |
| 217        | None    | 19  |
| 779        | Georgia | 20  |
| 849        | Willow  | 14  |
+------------+---------+-----+
Output:
+------------+---------+-----+
| student_id | name    | age |
+------------+---------+-----+
| 32         | Piper   | 5   |
| 779        | Georgia | 20  | 
| 849        | Willow  | 14  | 
+------------+---------+-----+
Explanation: 
Student with id 217 havs empty value in the name column, so it will be removed.


import pandas as pd

def dropMissingData(students: pd.DataFrame) -> pd.DataFrame:
    return students.dropna(subset = 'name', inplace = False)
